<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<OAuthV2 async="false" continueOnError="false" enabled="true" name="GenerateAccessTokenJWTBearerJWT">
    <DisplayName>GenerateAccessTokenJWTBearerJWT</DisplayName>
    <Operation>GenerateAccessToken</Operation>
    <ExpiresIn ref="oauth.client.expires_in">3600000</ExpiresIn>
    <SupportedGrantTypes>
        <!-- This part is very important: most real OAuth 2.0 apps will want to use other
         grant types. In this case it is important to NOT include the "client_credentials"
         type because it allows a client to get access to a token with no user authentication -->
        <GrantType>client_credentials</GrantType>
    </SupportedGrantTypes>
    <StoreToken>true</StoreToken>
    <ExternalAccessToken>jwt_signed</ExternalAccessToken>
    <ExternalAuthorization>true</ExternalAuthorization>
    <Attributes>
        <Attribute name="email" ref="jwt.VerifyJWTBearer.claim.email" display="true"/>
        <Attribute name="subject" ref="jwt.VerifyJWTBearer.claim.subject" display="true"/>
        <Attribute name="audience" ref="jwt.VerifyJWTBearer.claim.audience" display="true"/>
        <Attribute name="payload" ref="jwt.VerifyJWTBearer.payload-json" display="false"/>
    </Attributes>
    <ResponseType>request.formparam.response_type</ResponseType>
    <ResponseType>request.queryparam.response_type</ResponseType>
    <ClientId>request.formparam.client_id</ClientId>
    <GenerateResponse enabled="true"/>
</OAuthV2>