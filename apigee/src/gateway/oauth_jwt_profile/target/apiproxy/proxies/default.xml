<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules/>
    <DefaultFaultRule>
        <AlwaysEnforce>true</AlwaysEnforce>
        <Step>
            <Name>AddCORS</Name>
        </Step>
    </DefaultFaultRule>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>CreateISO8601</Name>
            </Step>
            <Step>
                <Name>GetOAuthConfig</Name>
            </Step>
        </Request>
        <Response>
            <Step>
                <Name>AddCORS</Name>
                <Condition>request.verb = "OPTIONS"</Condition>
            </Step>
            <Step>
                <Name>AddAuthorizationHeaderResponse</Name>
            </Step>
        </Response>
    </PreFlow>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <Flows>
        <Flow name="/authorize (code)">
            <Description/>
            <Request>
                <Step>
                    <Name>GenerateAuthorizationCode</Name>
                </Step>
                <Step>
                    <Name>GenerateAuthorizationCodeResponse</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/authorize") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="/token">
            <Description/>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "DELETE")</Condition>
        </Flow>
        <Flow name="/token">
            <Description/>
            <Request>
                <Step>
                    <Name>RefreshAccessToken</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "PUT")</Condition>
        </Flow>
        <Flow name="/token (code:jwt)">
            <Description/>
            <Request>
                <Step>
                    <Name>VerifyAPIKey</Name>
                </Step>
                <Step>
                    <Name>SetJWTVariables</Name>
                </Step>
                <Step>
                    <Name>GetJWTSecret</Name>
                </Step>
                <Step>
                    <Name>GenerateJWT</Name>
                </Step>
                <Step>
                    <Name>GenerateAccessTokenCodeJWT</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "authorization_code")
            and (request.formparam.token_format == "jwt")
            </Condition>
        </Flow>
        <Flow name="/token (code)">
            <Description/>
            <Request>
                <Step>
                    <Name>GenerateAccessTokenCode</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "authorization_code")
            </Condition>
        </Flow>
        <Flow name="/token (client:jwt)">
            <Description/>
            <Request>
                <Step>
                    <Name>GenerateAccessTokenClientFalse</Name>
                </Step>
                <Step>
                    <Name>SetProxyHostVariable</Name>
                </Step>
                <Step>
                    <Name>SetJWTVariables</Name>
                </Step>
                <Step>
                    <Name>GetJWTSecret</Name>
                </Step>
                <Step>
                    <Name>GenerateJWT</Name>
                </Step>
                <Step>
                    <Name>GenerateAccessTokenClientJWT</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "client_credentials") 
            and (request.formparam.token_format == "jwt")
            </Condition>
        </Flow>
        <Flow name="/token (client)">
            <Description/>
            <Request>
                <Step>
                    <Name>GenerateAccessTokenClient</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "client_credentials") 
            </Condition>
        </Flow>
        <Flow name="/token (implicit:jwt)">
            <Description/>
            <Request>
                <Step>
                    <Name>SetJWTVariables</Name>
                </Step>
                <Step>
                    <Name>GetJWTSecret</Name>
                </Step>
                <Step>
                    <Name>SetResponseTypeToken</Name>
                </Step>
                <Step>
                    <Name>GenerateJWT</Name>
                </Step>
                <Step>
                    <Name>GenerateAccessTokenImplicitJWT</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "implicit") 
            and (request.formparam.token_format == "jwt")
            </Condition>
        </Flow>
        <Flow name="/token (implicit)">
            <Description/>
            <Request>
                <Step>
                    <Name>GenerateAccessTokenImplicit</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "implicit") 
            </Condition>
        </Flow>
        <Flow name="/token (jwt-bearer:jwt)">
            <Description/>
            <Request>
                <Step>
                    <Name>VerifyAPIKey</Name>
                </Step>
                <Step>
                    <Name>DynamicTargetUrl</Name>
                </Step>
                <Step>
                    <Name>RetriveJWKs</Name>
                </Step>
                <Step>
                    <Name>VerifyJWTBearer</Name>
                </Step>
                <Step>
                    <Name>SetJWTVariables</Name>
                </Step>
                <Step>
                    <Name>GetJWTSecret</Name>
                </Step>
                <Step>
                    <Name>GenerateJWTBearerJWT</Name>
                </Step>
                <Step>
                    <Name>ReplaceGrantTypeClient</Name>
                </Step>
                <Step>
                    <Name>GenerateAccessTokenJWTBearerJWT</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "urn:ietf:params:oauth:grant-type:jwt-bearer") 
            and (request.formparam.token_format == "jwt")
            </Condition>
        </Flow>
        <Flow name="/token (jwt-bearer)">
            <Description/>
            <Request>
                <Step>
                    <Name>VerifyAPIKey</Name>
                </Step>
                <Step>
                    <Name>DynamicTargetUrl</Name>
                </Step>
                <Step>
                    <Name>RetriveJWKs</Name>
                </Step>
                <Step>
                    <Name>VerifyJWTBearer</Name>
                </Step>
                <Step>
                    <Name>ReplaceGrantTypeClient</Name>
                </Step>
                <Step>
                    <Name>GenerateAccessTokenJWTBearer</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "urn:ietf:params:oauth:grant-type:jwt-bearer") 
            </Condition>
        </Flow>
        <Flow name="/token (password:jwt)">
            <Description/>
            <Request>
                <Step>
                    <Name>VerifyAPIKey</Name>
                    <Condition>request.formparam.client_id != null</Condition>
                </Step>
                <Step>
                    <Name>ReplaceGrantTypeClient</Name>
                    <Condition>request.formparam.client_id != null</Condition>
                </Step>
                <Step>
                    <Name>SetJWTVariables</Name>
                </Step>
                <Step>
                    <Name>GetJWTSecret</Name>
                </Step>
                <Step>
                    <Name>GenerateJWT</Name>
                </Step>
                <Step>
                    <Name>GenerateAccessTokenClientJWTExternalAuth</Name>
                    <Condition>request.formparam.client_id != null</Condition>
                </Step>
                <Step>
                    <Name>GenerateAccessTokenClientJWT</Name>
                    <Condition>request.formparam.client_id == null</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "password") 
            and (request.formparam.token_format == "jwt")
            </Condition>
        </Flow>
        <Flow name="/token (password)">
            <Description/>
            <Request>
                <Step>
                    <Name>VerifyAPIKey</Name>
                    <Condition>request.formparam.client_id != null</Condition>
                </Step>
                <Step>
                    <Name>ReplaceGrantTypeClient</Name>
                    <Condition>request.formparam.client_id != null</Condition>
                </Step>
                <Step>
                    <Name>GenerateAccessTokenClientExternalAuth</Name>
                    <Condition>request.formparam.client_id != null</Condition>
                </Step>
                <Step>
                    <Name>GenerateAccessTokenPassword</Name>
                    <Condition>request.formparam.client_id == null</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "password") 
            </Condition>
        </Flow>
        <Flow name="/token (saml-bearer:jwt)">
            <Description/>
            <Request/>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "urn:ietf:params:oauth:grant-type:saml2-bearer") 
            and (request.formparam.token_format == "jwt")
            </Condition>
        </Flow>
        <Flow name="/token (saml-bearer)">
            <Description/>
            <Request/>
            <Response/>
            <Condition>
                (proxy.pathsuffix MatchesPath "/token") 
            and (request.verb = "POST") 
            and (request.formparam.grant_type == "urn:ietf:params:oauth:grant-type:saml2-bearer") 
            </Condition>
        </Flow>
        <Flow name="/token/introspect">
            <Description/>
            <Request>
                <Step>
                    <Name>VerifyOAuthToken</Name>
                </Step>
                <Step>
                    <Name>RemoveHeaderAuthorization</Name>
                </Step>
                <Step>
                    <Name>GenerateTokenResponse</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/token/introspect") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="/token/introspect/jwt">
            <Description/>
            <Request>
                <Step>
                    <Name>GetPublicKeys</Name>
                </Step>
                <Step>
                    <Name>VerifyOAuthToken</Name>
                </Step>
                <Step>
                    <Name>RemoveHeaderAuthorization</Name>
                </Step>
                <Step>
                    <Name>VerifyJWT</Name>
                </Step>
                <Step>
                    <Name>GenerateTokenResponseJWT</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/token/introspect/jwt") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="/certs">
            <Description/>
            <Request>
                <Step>
                    <Name>GetPublicKeys</Name>
                </Step>
                <Step>
                    <Name>GenerateJWKs</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>SendJWKMessage</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/certs") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="/user">
            <Description/>
            <Request>
                <Step>
                    <Name>VerifyOAuthToken</Name>
                </Step>
                <Step>
                    <Name>SampleUserResponse</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user") and (request.verb = "GET")</Condition>
        </Flow>
    </Flows>
    <HTTPProxyConnection>
        <BasePath>/v3/oauth</BasePath>
        <Properties/>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="NoRoute"/>
</ProxyEndpoint>