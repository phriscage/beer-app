# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import protos.beerlikes.beer_likes_pb2 as beer__likes__pb2


class BeerLikesStub(object):
  """import "google/protobuf/timestamp.proto";

  Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetLike = channel.unary_unary(
        '/beerlikes.BeerLikes/GetLike',
        request_serializer=beer__likes__pb2.LikeQuery.SerializeToString,
        response_deserializer=beer__likes__pb2.Like.FromString,
        )
    self.ListLikes = channel.unary_stream(
        '/beerlikes.BeerLikes/ListLikes',
        request_serializer=beer__likes__pb2.LikesQuery.SerializeToString,
        response_deserializer=beer__likes__pb2.Like.FromString,
        )
    self.GetLikesSummary = channel.unary_unary(
        '/beerlikes.BeerLikes/GetLikesSummary',
        request_serializer=beer__likes__pb2.LikesQuery.SerializeToString,
        response_deserializer=beer__likes__pb2.LikesSummary.FromString,
        )


class BeerLikesServicer(object):
  """import "google/protobuf/timestamp.proto";

  Interface exported by the server.
  """

  def GetLike(self, request, context):
    """A simple RPC.

    Obtains the like at a given RefType.

    A like with an empty id is returned if there's no like at the given
    reftype.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListLikes(self, request, context):
    """Stream all the Likes at a given RefType
    position.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLikesSummary(self, request, context):
    """Batch fetch all the Likes and let the server do the calculations
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BeerLikesServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetLike': grpc.unary_unary_rpc_method_handler(
          servicer.GetLike,
          request_deserializer=beer__likes__pb2.LikeQuery.FromString,
          response_serializer=beer__likes__pb2.Like.SerializeToString,
      ),
      'ListLikes': grpc.unary_stream_rpc_method_handler(
          servicer.ListLikes,
          request_deserializer=beer__likes__pb2.LikesQuery.FromString,
          response_serializer=beer__likes__pb2.Like.SerializeToString,
      ),
      'GetLikesSummary': grpc.unary_unary_rpc_method_handler(
          servicer.GetLikesSummary,
          request_deserializer=beer__likes__pb2.LikesQuery.FromString,
          response_serializer=beer__likes__pb2.LikesSummary.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'beerlikes.BeerLikes', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
